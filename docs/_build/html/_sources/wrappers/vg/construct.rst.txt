.. _`bio/vg/construct`:

VG CONSTRUCT
============

Construct variation graphs from a reference and variant calls.

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule construct:
        input:
            ref="c.fa",
            vcfgz="c.vcf.gz"
        output:
            vg="graph/c.vg"
        params:
            "--node-max 10"
        log:
            "logs/vg/construct/c.log"
        threads:
            4
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/vg/construct"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``vg==1.27.0``





Authors
-------

* Ali Ghaffaari


Code
----

.. code-block:: python

    __author__ = "Ali Ghaffaari"
    __copyright__ = "Copyright 2017, Ali Ghaffaari"
    __email__ = "ghaffari@mpi-inf.mpg.de"
    __license__ = "MIT"


    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=False)

    shell(
        "(vg construct {snakemake.params} --reference {snakemake.input.ref}"
        " --vcf {snakemake.input.vcfgz} --threads {snakemake.threads}"
        " > {snakemake.output.vg}) {log}"
    )


.. |nl| raw:: html

   <br>