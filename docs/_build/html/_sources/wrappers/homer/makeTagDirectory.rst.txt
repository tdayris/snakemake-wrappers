.. _`bio/homer/makeTagDirectory`:

HOMER MAKETAGDIRECTORY
======================

Create a tag directory with the HOMER suite. For more information, please see the `documentation <http://homer.ucsd.edu/homer/ngs/tagDir.html>`_.


**URL**: http://homer.ucsd.edu/homer/ngs/tagDir.html

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule homer_makeTagDir:
        input:
            # input bam, can be one or a list of files
            bam="{sample}.bam",
        output:
            directory("tagDir/{sample}")
        params:
            extra=""  # optional params, see homer manual
        log:
            "logs/makeTagDir/{sample}.log"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/homer/makeTagDirectory"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``homer==4.11``
* ``samtools==1.10``

Input/Output
------------
**Input:**

* Paths to tag directories. This must be the only elements in the input file list

**Output:**

* Path to merged tag directories. This must be the only element in the output file list.



Params
------

* ``extra``: Optional parameters





Authors
-------

* Jan Forster


Code
----

.. code-block:: python

    __author__ = "Jan Forster"
    __copyright__ = "Copyright 2020, Jan Forster"
    __email__ = "j.forster@dkfz.de"
    __license__ = "MIT"

    from snakemake.shell import shell
    import os.path as path
    import sys

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    shell(
        "(makeTagDirectory" " {snakemake.output}" " {extra}" " {snakemake.input})" " {log}"
    )


.. |nl| raw:: html

   <br>