.. _`bio/fgbio/annotatebamwithumis`:

FGBIO ANNOTATEBAMWITHUMIS
=========================

Annotates existing BAM files with UMIs (Unique Molecular Indices, aka Molecular IDs, Molecular barcodes) from a separate FASTQ file.

**URL**: https://fulcrumgenomics.github.io/fgbio/

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule AnnotateBam:
        input:
            bam="mapped/{sample}.bam",
            umi="umi/{sample}.fastq"
        output:
            "mapped/{sample}.annotated.bam"
        params: ""
        log:
            "logs/fgbio/annotate_bam/{sample}.log"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/fgbio/annotatebamwithumis"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``fgbio==0.6.1``

Input/Output
------------
**Input:**

* ``bam``: Path to bam file
* ``umi``: Path to umi file

**Output:**

* Path to annotated bam, this must be the only output file



Params
------

* ``extra``: Optional parameters




Notes
-----

See source on `github <https://github.com/fulcrumgenomics/fgbio>`_.



Authors
-------

* Patrik Smeds


Code
----

.. code-block:: python

    __author__ = "Patrik Smeds"
    __copyright__ = "Copyright 2018, Patrik Smeds"
    __email__ = "patrik.smeds@gmail.com"
    __license__ = "MIT"


    from snakemake.shell import shell

    shell.executable("bash")

    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    extra_params = snakemake.params.get("extra", "")

    bam_input = snakemake.input.bam

    if bam_input is None:
        raise ValueError("Missing bam input file!")
    elif not isinstance(bam_input, str):
        raise ValueError("Input bam should be a string: " + str(bam_input) + "!")

    umi_input = snakemake.input.umi

    if umi_input is None:
        raise ValueError("Missing input file with UMIs")
    elif not isinstance(umi_input, str):
        raise ValueError("Input UMIs-file should be a string: " + str(umi_input) + "!")

    if not len(snakemake.output) == 1:
        raise ValueError("Only one output value expected: " + str(snakemake.output) + "!")
    output_file = snakemake.output[0]


    if output_file is None:
        raise ValueError("Missing output file!")
    elif not isinstance(output_file, str):
        raise ValueError("Output bam-file should be a string: " + str(output_file) + "!")

    shell(
        "fgbio AnnotateBamWithUmis"
        " -i {bam_input}"
        " -f {umi_input}"
        " -o {output_file}"
        " {extra_params}"
        " {log}"
    )


.. |nl| raw:: html

   <br>