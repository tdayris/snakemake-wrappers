.. _`bio/picard/addorreplacereadgroups`:

PICARD ADDORREPLACEREADGROUPS
=============================

Add or replace read groups with picard tools.

**URL**: https://gatk.broadinstitute.org/hc/en-us/articles/360046223331-AddOrReplaceReadGroups-Picard-

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule replace_rg:
        input:
            "mapped/{sample}.bam"
        output:
            "fixed-rg/{sample}.bam"
        log:
            "logs/picard/replace_rg/{sample}.log"
        params:
            "RGLB=lib1 RGPL=illumina RGPU={sample} RGSM={sample}"
        # optional specification of memory usage of the JVM that snakemake will respect with global
        # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
        # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
        # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
        resources:
            mem_mb=1024
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/picard/addorreplacereadgroups"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``picard==2.22.1``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* bam file. This is the only element in the input file list

**Output:**

* bam file with added or replaced read groups. This must be the only element in the output file list



Params
------

* ``Optional parameters.``: 




Notes
-----

This tool/wrapper does not handle multithreading



Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"


    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts

    extra = snakemake.params
    java_opts = get_java_opts(snakemake)

    shell(
        "picard AddOrReplaceReadGroups {java_opts} {extra} "
        "I={snakemake.input} O={snakemake.output} &> {snakemake.log}"
    )


.. |nl| raw:: html

   <br>