.. _`bio/picard/mergevcfs`:

PICARD MERGEVCFS
================

Merge vcf files using picard tools.


**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule merge_vcfs:
        input:
            vcfs=["snvs.chr1.vcf", "snvs.chr2.vcf"]
        output:
            "snvs.vcf"
        log:
            "logs/picard/mergevcfs.log"
        params:
            extra=""
        # optional specification of memory usage of the JVM that snakemake will respect with global
        # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
        # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
        # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
        resources:
            mem_mb=1024
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/picard/mergevcfs"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``picard==2.22.1``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* ``vcfs``: vcf files. These must be the only input elements

**Output:**

* merged vcf file. This must be the first element of the output file list



Params
------

* ``extra``: Optional elements




Notes
-----

This tool/wrapper does not handle multithreading



Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    """Snakemake wrapper for picard MergeSamFiles."""

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2018, Johannes Köster"
    __email__ = "johannes.koester@protonmail.com"
    __license__ = "MIT"


    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts


    inputs = " ".join("INPUT={}".format(f) for f in snakemake.input.vcfs)
    log = snakemake.log_fmt_shell(stdout=False, stderr=True)
    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)


    shell(
        "picard"
        " MergeVcfs"
        " {java_opts}"
        " {extra}"
        " {inputs}"
        " OUTPUT={snakemake.output[0]}"
        " {log}"
    )


.. |nl| raw:: html

   <br>