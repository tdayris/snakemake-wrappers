.. _`bio/cpat/cpat`:

CPAT
====

Assess coding potential

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_cpat:
        input:
            hexamer_table = "hexamer_table",
            logit_model = "logit_model.logit.RData",
            transcripts = "transcripts.fasta"
        output:
            "cpat_results.tsv"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/cpat/cpat"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconda:cpat=2.0.0``

Input/Output
------------
**Input:**

* Hexamer table
* Legit model
* Transcript sequences (FASTA) or coordinate (BED)
* Reference genome is transcript coordinates were provided

**Output:**

* TSV formatted coding potential assessment





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for CPAT"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    # A reference sequence in FASTA format is needed only if
    # transcript file was in BED format.
    reference = ""
    if "reference" in snakemake.input.keys():
        reference = "--ref {}".format(snakemake.input["reference"])

    extra = snakemake.params.get("extra", "")

    shell(
        " cpat.py "
        " --gene {snakemake.input.transcripts} "
        " {reference} "
        " --hex {snakemake.input.hexamer_table} "
        " --logitModel {snakemake.input.logit_model}"
        " --outfile {snakemake.output[0]}"
        " {extra} "
        " {log} "
    )


.. |nl| raw:: html

   <br>