.. _`bio/bioinfokit/maplot`:

BIOINFOKIT MA PLOT
==================

Build a MA-plot from a TSV file with Bioinfokit

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_bioinfokit_volcanoplot:
        input:
            "maplot_dataset.csv"
        output:
            "figures/maplot.png"
        params:
            maplot = {
                'lfc': 'log2FC',
                'ct_count': 'value1',
                'st_count': 'value2',
                'plotlegend': True,
                'legendpos': 'lower right',
                'legendlabels': ['Upregulated', 'Normal', 'Downregulated']
            }
        log:
            "bioinfokit.log"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/bioinfokit/maplot"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioinfokit=1.0.8``
* ``numpy=1.20.1``
* ``pandas=1.2.3``
* ``matplotlib=3.3.4``
* ``seaborn=0.11.1``
* ``matplotlib-venn=0.11.6``
* ``adjusttext=0.7.3.1``
* ``imagemagick==7.0.11_4``

Input/Output
------------
**Input:**

* A table containing gene IDs, log fold change, and normalized counts

**Output:**

* A PNG-formatted ma plot




Notes
-----

Use parameters in Snakefile to pass options to python functions with dictionnaries

* read_csv Dict[str, Any]: Arguments to pandas.read_csv(). Do not set: `filepath_or_bufferstr`, or `sep`.
* volcano Dict[str, Any]: Arguments to bioinfokit.visuz.gene_exp.volcano(). Do not set: `df`, `figtype`, `figname`, or `show`.



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    """Snakemake wrapper for bioinfokit MA-plot"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020"
    __email__ = "Thibault Dayris"
    __license__ = "MIT"

    from bioinfokit import visuz
    import csv
    import logging
    import os
    import pandas


    logging.basicConfig(
        filename=snakemake.log[0],
        filemode="w",
        level=logging.DEBUG
    )
    logging.getLogger('matplotlib.font_manager').disabled = True

    # Recover both figure format and name from output file name
    figname, figtype = os.path.splitext(snakemake.output[0])
    figtype = figtype.strip(".").lower()

    # Detect delimiter with python
    with open(snakemake.input[0], "r") as table:
        dialect = csv.Sniffer().sniff(table.readline())
        logging.debug(f"Detected dialect: {dialect.delimiter}")

    # Loading dataset
    df = pandas.read_csv(
        snakemake.input[0],
        sep=dialect.delimiter,
        **snakemake.params.get("read_csv", {})
    )
    logging.debug(df.head())

    # Building and saving volcanoplot
    visuz.gene_exp.ma(
        df=df,
        show=False,
        figtype=figtype,
        figname=figname,
        **snakemake.params.get("maplot", {})
    )


.. |nl| raw:: html

   <br>