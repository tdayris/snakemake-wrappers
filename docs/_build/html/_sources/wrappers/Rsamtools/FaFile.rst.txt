.. _`bio/Rsamtools/FaFile`:

FA_FILE
=======

Read fasta files and return it as a RDS object

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_rsamtools_fafile:
        input:
            fasta="genome.fa",
            fai="genome.fa.fai"
        output:
            rds="sequence.rds"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/Rsamtools/FaFile"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconda:bioconductor-rsamtools=2.4.0``

Input/Output
------------
**Input:**

* Fasta file

**Output:**

* RDS object





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/usr/bin/R

    # Load a fasta file and return a RDS object
    library(package="Rsamtools", quietly=TRUE);

    # Load dataset
    fasta <- Rsamtools::FaFile(
      file = base::as.character(x = snakemake@input[["fasta"]]),
      index = base::as.character(x = snakemake@input[["fai"]])
    );

    # Save as RDS object
    base::saveRDS(
      object = fasta,
      file = base::as.character(x = snakemake@output[["rds"]])
    );


.. |nl| raw:: html

   <br>