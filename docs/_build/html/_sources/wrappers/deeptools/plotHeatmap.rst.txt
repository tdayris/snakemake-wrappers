.. _`bio/deeptools/plotHeatmap`:

PLOTHEATMAP
===========

Calculate scores per genome regions and prepare intermediate
files for DeepTools


**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_deeptools_plotheatmap:
        input:
            archive = "archive.gz"
        output:
            plot = "heatmap.png"
        message:
            "Testing deeptools plotheatmap"
        threads:
            1
        resources:
            mem_mb = (
                lambda wildcards, attempt: min(attempt * 1024, 10240)
            ),
            time_min = (
                lambda wildcards, attempt: min(attempt * 20, 200)
            )
        log:
            "logs/test_deeptools_plotheatmap.log"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/deeptools/plotHeatmap"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconda:deeptools=3.4.3``

Input/Output
------------
**Input:**

* TSV formatted matrix file from DeepTools computeMatrix

**Output:**

* PNG/EPS/PDF/SVG formatted heatmap
* Optional BED formatted regions
* Optional TSV fromatted matrix





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for deeptools plotHeatmap"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    extra = snakemake.params.get("extra", "")

    if "matrix" in snakemake.output.keys():
        extra += " --outFileNameMatrix {} ".format(snakemake.output.matrix)
    if "regions" in snakemake.output.keys():
        extra += " --outFileSortedRegions {} ".format(snakemake.output.regions)

    shell(
        "plotHeatmap "
        " --matrixFile {snakemake.input.archive} "
        " --outFileName {snakemake.output.plot} "
        " {extra} "
        " {log} "
    )


.. |nl| raw:: html

   <br>