.. _`bio/delly`:

DELLY
=====

Call variants with delly.

**URL**: https://github.com/dellytools/delly

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule delly:
        input:
            ref="genome.fasta",
            samples=["mapped/a.bam"],
            # optional exclude template (see https://github.com/dellytools/delly)
            exclude="human.hg19.excl.tsv"
        output:
            "sv/calls.bcf"
        params:
            extra=""  # optional parameters for delly (except -g, -x)
        log:
            "logs/delly.log"
        threads: 2  # It is best to use as many threads as samples
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/delly"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``delly==0.8.7``

Input/Output
------------
**Input:**

* ref
* exclude
* samples

**Output:**

* VCF file, this must be the first element in the output file list.



Params
------

* ``extra``: Optional parameters





Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"


    from snakemake.shell import shell


    exclude = (
        "-x {}".format(snakemake.input.exclude)
        if snakemake.input.get("exclude", "")
        else ""
    )

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    shell(
        "OMP_NUM_THREADS={snakemake.threads} delly call {extra} "
        "{exclude} -g {snakemake.input.ref} "
        "-o {snakemake.output[0]} {snakemake.input.samples} {log}"
    )


.. |nl| raw:: html

   <br>