.. _`bio/fgsea/gmtpathways`:

FGSEA_GMT_PATHWAYS
==================

Import GMT files in R with fgsea

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_fgsea_gmtpathways:
        input:
            gmt = "test.gmt"
        output:
            rds = "test.gmt.RDS"
        log:
            "logs/fgsea.log"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/fgsea/gmtpathways"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconductor-fgsea==1.16.0``

Input/Output
------------
**Input:**

* a GMT file

**Output:**

* a RDS-formatted GMT file





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/usr/bin/R

    # This script takes a GMT file and loads it into R

    # __author__ = "Thibault Dayris"
    # __copyright__ = "Copyright 2021, Thibault Dayris"
    # __email__ = "thibault.dayris@gustaveroussy.fr"
    # __license__ = "MIT"

    # Sink the stderr and stdout to the snakemake log file
    # https://stackoverflow.com/a/48173272
    log.file<-file(snakemake@log[[1]],open="wt");
    base::sink(log.file);
    base::sink(log.file,type="message");

    base::library(package = "fgsea");

    gmt_file <- as.character(x = snakemake@input[["gmt"]]);

    gmt_data <- fgsea::gmtPathways(gmt.file = gmt_file);

    base::saveRDS(
      object = gmt_data,
      file = base::as.character(snakemake@output[["rds"]])
    );

    # Proper syntax to close the connection for the log file
    # but could be optional for Snakemake wrapper
    base::sink(type="message");
    base::sink();


.. |nl| raw:: html

   <br>