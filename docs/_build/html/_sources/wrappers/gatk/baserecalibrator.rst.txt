.. _`bio/gatk/baserecalibrator`:

GATK BASERECALIBRATOR
=====================

Run gatk BaseRecalibrator.


**URL**: https://software.broadinstitute.org/gatk/documentation/article?id=11050

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule gatk_baserecalibrator:
        input:
            bam="mapped/{sample}.bam",
            ref="genome.fasta",
            dict="genome.dict",
            known="dbsnp.vcf.gz"  # optional known sites - single or a list
        output:
            recal_table="recal/{sample}.grp"
        log:
            "logs/gatk/baserecalibrator/{sample}.log"
        params:
            extra="",  # optional
            java_opts="", # optional
        # optional specification of memory usage of the JVM that snakemake will respect with global
        # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
        # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
        # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
        resources:
            mem_mb=1024
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/gatk/baserecalibrator"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk4==4.2.0.0``
* ``openjdk=8``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* ``bam``: Path to bam file
* ``ref``: Path to fasta reference
* ``known``: vcf.gz of known variants

**Output:**

* ``recal_table``: Path to recalibration table for the bam



Params
------

* ``java_opts``: The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.

* ``extra``: The `extra` param allows for additional program arguments.





Authors
-------

* Christopher Schröder
* Johannes Köster
* Jake VanCampen


Code
----

.. code-block:: python

    __author__ = "Christopher Schröder"
    __copyright__ = "Copyright 2020, Christopher Schröder"
    __email__ = "christopher.schroeder@tu-dortmund.de"
    __license__ = "MIT"


    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts

    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    known = snakemake.input.get("known", "")
    if known:
        if isinstance(known, str):
            known = [known]
        known = list(map("--known-sites {}".format, known))

    shell(
        "gatk --java-options '{java_opts}' BaseRecalibrator {extra} "
        "-R {snakemake.input.ref} -I {snakemake.input.bam} "
        "-O {snakemake.output.recal_table} {known} {log}"
    )


.. |nl| raw:: html

   <br>