.. _`bio/gatk/estimatelibrarycomplexity`:

GATK ESTIMATELIBRARYCOMPLEXITY
==============================

Run gatk EstimateLibraryComplexity


**URL**: https://gatk.broadinstitute.org/hc/en-us/articles/360057438451-EstimateLibraryComplexity-Picard-

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule gatk_estimate_library_complexity:
        input:
            bam="{sample}.bam"
        output:
            metrics="{sample}.metrics"
        log:
            "logs/{sample}.log"
        params:
            extra="",
    	java_opts="", # optional
        resources:
            mem_mb=1024,
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/gatk/estimatelibrarycomplexity"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk4==4.2.0.0``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* SAM/BAM/CRAM file. This must be the only input file provided.

**Output:**

* ``metrics``: Path to metrics file



Params
------

* ``java_opts``: The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-XX:ParallelGCThreads=10" (not for `-XmX` or `-Djava.io.tmpdir`, since they are handled automatically).

* ``extra``: The `extra` param allows for additional program arguments.





Authors
-------

* Filipe G. Vieira


Code
----

.. code-block:: python

    __author__ = "Filipe G. Vieira"
    __copyright__ = "Copyright 2021, Filipe G. Vieira"
    __license__ = "MIT"


    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts

    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)


    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    shell(
        "gatk --java-options '{java_opts}' EstimateLibraryComplexity --INPUT {snakemake.input} "
        "{extra} --OUTPUT {snakemake.output.metrics} {log}"
    )


.. |nl| raw:: html

   <br>