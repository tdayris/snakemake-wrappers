.. _`bio/gatk/createsomaticpanelofnormals`:

GATK CREATESOMATICPANELOFNORMALS
================================

Run gatk CreateSomaticPanelOfNormals.


**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_createsomaticpanelofnormals:
        input:
            gvcfs=["calls/a.g.vcf.gz", "calls/b.g.vcf.gz"],
            ref="genome.fasta",
            ref_dict="genome.dict",
            ref_fai="genome.fasta.fai"
        output:
            gvcf="pon.g.vcf.gz",
        log:
            "logs/gatk/createsomaticpanelofnormals.log"
        params:
            extra="",  # optional
            java_opts="",  # optional
        resources:
            mem_mb=1024
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/gatk/createsomaticpanelofnormals"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk4==4.2.0.0``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* Genomics database
* Reference fasta

**Output:**

* VCF formatted Somatic Panel of Normal.




Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param allows for additional program arguments.
* For more information see, https://gatk.broadinstitute.org/hc/en-us/articles/360036364532-CreateSomaticPanelOfNormals-BETA-



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    """
    Snakemake wrapper for GATK CreateSomaticPanelOfNormals
    """

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    import os

    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts


    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)

    gvcfs = list(map("--variant {}".format, snakemake.input.gvcfs))

    bam = ""
    if "bam" in snakemake.input.keys():
        bam = list(map("--intervals {}".format, snakemake.input.bam))

    intervals = ""
    if "intervals" in snakemake.input.keys():
        intervals = list(map("--input {}".format, snakemake.input.intervals))

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    shell(
        "gatk --java-options '{java_opts}' CreateSomaticPanelOfNormals {extra} "
        "{gvcfs} {bam} {intervals} "
        "--reference {snakemake.input.ref} "
        "--output {snakemake.output.gvcf} {log}"
    )


.. |nl| raw:: html

   <br>