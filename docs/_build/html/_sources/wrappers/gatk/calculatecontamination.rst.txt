.. _`bio/gatk/calculatecontamination`:

GATK CALCULATECONTAMINATION
===========================

Run gatk CalculateContamination to estimate contamination.


**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_calculate_contamination:
        input:
            summary="{sample}_tumor_pileup_summary.table""
        output:
            table="summary/{sample}_calculate_contamination.table",
        log:
            "logs/gatk/calculatecontamination/{sample}.log"
        params:
            extra="",  # optional
            java_opts="", # optional
        # optional specification of memory usage of the JVM that snakemake will respect with global
        # resource restrictions (https://snakemake.readthedocs.io/en/latest/snakefiles/rules.html#resources)
        # and which can be used to request RAM during cluster job submission as `{resources.mem_mb}`:
        # https://snakemake.readthedocs.io/en/latest/executing/cluster.html#job-properties
        resources:
            mem_mb=1024
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/gatk/calculatecontamination"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk4==4.2.0.0``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* Pileup Summary from GATK

**Output:**

* GATK contamination table




Notes
-----

* The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.
* The `extra` param alllows for additional program arguments.
* For more inforamtion see, https://software.broadinstitute.org/gatk/documentation/article?id=11050
* Use GetPileupSummaries to get expected input



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python

    """
    Snakemake wrapper for GATK GetPileupSummaries
    """

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2021, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    import os

    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)

    matched = ""
    if "normal" in snakemake.input.keys():
        matched = "--matched-normal {}".format(snakemake.input["normal"])


    segmentation = ""
    if "segmentation" in snakemake.output.keys():
        segmentation = "--tumor-segmentation {}".format(
            snakemake.output["segmentation"]
        )


    shell(
        "gatk --java-options '{java_opts}' CalculateContamination {extra} "
        "--input {snakemake.input.summary} --output {snakemake.output.table} "
        "{matched} {segmentation} {log}"
    )


.. |nl| raw:: html

   <br>