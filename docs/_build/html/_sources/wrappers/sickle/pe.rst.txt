.. _`bio/sickle/pe`:

SICKLE PE
=========

Trim paired-end reads with sickle.

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule sickle_pe:
      input:
        r1="input_R1.fq",
        r2="input_R2.fq"
      output:
        r1="output_R1.fq",
        r2="output_R2.fq",
        rs="output_single.fq",
      params:
        qual_type="sanger",
        # optional extra parameters
        extra=""
      log:
        # optional log file
        "logs/sickle/job.log"
      wrapper:
        "0.50.4-2418-g8fefa1e53/bio/sickle/pe"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``sickle-trim==1.33``





Authors
-------

* Wibowo Arindrarto


Code
----

.. code-block:: python

    __author__ = "Wibowo Arindrarto"
    __copyright__ = "Copyright 2016, Wibowo Arindrarto"
    __email__ = "bow@bow.web.id"
    __license__ = "BSD"

    from snakemake.shell import shell

    # Placeholder for optional parameters
    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell()

    shell(
        "(sickle pe -f {snakemake.input.r1} -r {snakemake.input.r2} "
        "-o {snakemake.output.r1} -p {snakemake.output.r2} "
        "-s {snakemake.output.rs} -t {snakemake.params.qual_type} "
        "{extra}) {log}"
    )


.. |nl| raw:: html

   <br>