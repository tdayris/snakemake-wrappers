.. _`bio/BiGR/msisensor_table`:

MSISENSOR_TABLE
===============

aggregate multiple msi files

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_msisensor_table:
        input:
            ["s1.msi", "s2.msi"]
        output:
            "table.msi"
        threads: 1
        params:
            stability=3.5,
            sample_list=["s1", "s2"]
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/BiGR/msisensor_table"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``python==3.9.7``
* ``pandas==1.3.3``

Input/Output
------------
**Input:**

* list of msi files

**Output:**

* a single msi table



Params
------

* ``stability``: Threshold used to qualify a tumor (MSS Tumor stable)/(MSI Tumor instable)





Authors
-------



Code
----

.. code-block:: python

    #!/usr/bin/python3.9
    # -*- coding: utf-8 -*-

    """This wrapper aggregates multiple .msi files from msi-sensor"""

    import pandas

    def read_msi(path: str, sample: str) -> pandas.DataFrame:
        tmp = pandas.read_csv(path, index_col=None, header=0, sep="\t")
        tmp["Sample_id"] = [sample]
        tmp.set_index("Sample_id", inplace=True)
        return tmp


    def stability(percent: float, stability: float) -> list[str]:
        if percent >= stability:
            return "MSI"
        return "MSS"


    msi = None
    for msi_path, sample_name in zip(snakemake.input, snakemake.params.sample_list):
        tmp = read_msi(msi_path, sample_name)
        try:
            msi = pandas.concat([msi, tmp], axis=0, verify_integrity=True)
        except ValueError:
            msi = tmp

    msi["Stability"] = [
        stability(percent, snakemake.params.get("stability", 20)) 
        for percent in msi["%"]
    ]

    msi.to_csv(
        snakemake.output[0],
        sep="\t",
        header=True,
        index=True,
    )

.. |nl| raw:: html

   <br>