.. _`bio/rbt/sequence-stats`:

SEQUENCE-STATS
==============

compute stats on sequence file with `rust bio tools <https://github.com/rust-bio/rust-bio-tools>`_

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_rbt_sequence_stats:
        input:
            seq = "sequence.fa"
        output:
            "stats.yaml"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/rbt/sequence-stats"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``rust-bio-tools==0.16``

Input/Output
------------
**Input:**

* A sequence file (fastq or fasta), gzipped or not

**Output:**

* A yaml file containing




Notes
-----

Two threads are required when the input files are gzipped.

The `--fastq` flag is set automatically.



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for rust-bio-tools sequence-stats"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    min_threads = 1
    extra = snakemake.params.get("extra", "")
    sequence = snakemake.input.get("seq", "")

    # Adding the -q flag in case user provided a Fastq file
    if sequence.endswith(("fq", "fastq", "fq.gz", "fastq.gz")):
        extra += " --fastq "

    # Dynamically gunzipping sequence file if needed
    if sequence.endswith(".gz"):
        sequence = "<(gunzip -c {})".format(sequence)
        min_threads += 1  # 1 rbt + 1 gunzip = 2 threads


    if snakemake.threads < min_threads:
        raise ValueError(
            "Expected at least {} threads, got {}".format(
                min_threads, snakemake.threads
            )
        )


    shell("rbt sequence-stats {extra} < {sequence} > {snakemake.output} {log}")


.. |nl| raw:: html

   <br>