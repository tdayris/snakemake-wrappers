.. _`bio/rbt/vcf-annotate-dgidb`:

VCF-ANNOTATE-DGIDB
==================

Looks for interacting drugs in `DGIdb <>`_ and annotates them for every gene in every record using `rust bio tools <https://github.com/rust-bio/rust-bio-tools>`_

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_rbt_vcf_annotate_dgidb:
        input:
            "file.vcf"
        output:
            "annotated.vcf"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/rbt/vcf-annotate-dgidb"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``rust-bio-tools==0.16``

Input/Output
------------
**Input:**

* Callings (VCF, BCF)

**Output:**

* Annotated calls (VCF, BCF)




Notes
-----

See a list of sources at: https://dgidb.org/api/v2/interaction_sources.json



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3
    # -*- coding: utf-8 -*-

    """This is the Snakemake Wrapper for rust-bio-tools vcf-annotate-dgidb"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.shell import shell
    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    extra = snakemake.params.get("extra", "")

    shell(
        "rbt vcf-annotate-dgidb "
        " {snakemake.input} "
        " {extra} "
        "> {snakemake.output} {log}"
    )


.. |nl| raw:: html

   <br>