.. _`bio/samtools/sort`:

SAMTOOLS SORT
=============

Sort bam file with samtools. For more information see `SAMtools documentation <http://www.htslib.org/doc/samtools-sort.html>`_.

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule samtools_sort:
        input:
            "mapped/{sample}.bam"
        output:
            "mapped/{sample}.sorted.bam"
        params:
            extra = "-m 4G",
            tmp_dir = "/tmp/"
        threads:  # Samtools takes additional threads through its option -@
            8     # This value - 1 will be sent to -@.
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/samtools/sort"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``samtools==1.10``




Notes
-----

* Samtools -@/--threads takes one integer as input. This is the number of additional threads and not raw threads.



Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"


    import os
    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    out_name, out_ext = os.path.splitext(snakemake.output[0])

    tmp_dir = snakemake.params.get("tmp_dir", "")
    if tmp_dir:
        prefix = os.path.join(tmp_dir, os.path.basename(out_name))
    else:
        prefix = out_name

    if not os.path.exists(tmp_dir):
        os.makedirs(name=tmp_dir, exist_ok=True)

    # Samtools takes additional threads through its option -@
    # One thread for samtools
    # Other threads are *additional* threads passed to the argument -@
    threads = "" if snakemake.threads <= 1 else " -@ {} ".format(snakemake.threads - 1)

    # Memory per thread
    extra = snakemake.params[0]
    if "mem_mb" in snakemake.resources.keys() and "-m" not in extra:
        extra += " -m {}M".format(int(snakemake.resources["mem_mb"] / snakemake.threads))

    shell(
        "samtools sort {snakemake.params.extra} {threads} -o {snakemake.output[0]} "
        "-T {prefix} {snakemake.input[0]} {log}"
    )


.. |nl| raw:: html

   <br>