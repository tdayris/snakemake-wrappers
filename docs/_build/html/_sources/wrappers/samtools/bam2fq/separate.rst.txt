.. _`bio/samtools/bam2fq/separate`:

SAMTOOLS BAM2FQ SEPARATE
========================

Convert a bam file with paired end reads back to unaligned reads in a two separate fastq files with samtools. Reads that are not properly paired are discarded (READ_OTHER and singleton reads in samtools bam2fq documentation), as are secondary (0x100) and supplementary reads (0x800).

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule samtools_bam2fq_separate:
        input:
            "mapped/{sample}.bam"
        output:
            "reads/{sample}.1.fq",
            "reads/{sample}.2.fq"
        params:
            sort = "-m 4G",
            bam2fq = "-n"
        threads:  # Remember, this is the number of samtools' additional threads
            3     # At least 2 threads have to be requested on cluster sumbission.
                  # Thus, this value - 2 will be sent to samtools sort -@ argument.
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/samtools/bam2fq/separate"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``samtools==1.10``




Notes
-----

* Samtools -@/--threads takes one integer as input. This is the number of additional threads and not raw threads.



Authors
-------

* David Laehnemann
* Victoria Sack


Code
----

.. code-block:: python

    __author__ = "David Laehnemann, Victoria Sack"
    __copyright__ = "Copyright 2018, David Laehnemann, Victoria Sack"
    __email__ = "david.laehnemann@hhu.de"
    __license__ = "MIT"


    import os
    from snakemake.shell import shell

    params_sort = snakemake.params.get("sort", "")
    params_bam2fq = snakemake.params.get("bam2fq", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    prefix = os.path.splitext(snakemake.output[0])[0]

    # Samtools takes additional threads through its option -@
    # One thread is used bu Samtools sort
    # One thread is used by Samtools bam2fq
    # So snakemake.threads has to take them into account
    # before allowing additional threads through samtools sort -@
    threads = "" if snakemake.threads <= 2 else " -@ {} ".format(snakemake.threads - 2)

    shell(
        "(samtools sort -n "
        " {threads} "
        " -T {prefix} "
        " {params_sort} "
        " {snakemake.input[0]} | "
        "samtools bam2fq "
        " {params_bam2fq} "
        " -1 {snakemake.output[0]} "
        " -2 {snakemake.output[1]} "
        " -0 /dev/null "
        " -s /dev/null "
        " -F 0x900 "
        " - "
        ") {log}"
    )


.. |nl| raw:: html

   <br>