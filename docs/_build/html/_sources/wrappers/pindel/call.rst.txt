.. _`bio/pindel/call`:

PINDEL
======

Call variants with pindel.

**URL**: http://gmt.genome.wustl.edu/packages/pindel/

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    pindel_types = ["D", "BP", "INV", "TD", "LI", "SI", "RP"]


    rule pindel:
        input:
            ref="genome.fasta",
            # samples to call
            samples=["mapped/a.bam"],
            # bam configuration file, see http://gmt.genome.wustl.edu/packages/pindel/quick-start.html
            config="pindel_config.txt"
        output:
            expand("pindel/all_{type}", type=pindel_types)
        params:
            # prefix must be consistent with output files
            prefix="pindel/all",
            extra=""  # optional parameters (except -i, -f, -o)
        log:
            "logs/pindel.log"
        threads: 4
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/pindel/call"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``pindel==0.2.5b8``

Input/Output
------------
**Input:**

* ``config``: Path to config file, see `documentation <http://gmt.genome.wustl.edu/packages/pindel/quick-start.html>`_ for more information.
* ``ref``: Path to fasta genome sequence

**Output:**

* Calls. This must be the first output of the output file list



Params
------

* ``extra``: Optional parameters

* ``prefix``: Output file prefix





Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"

    import os
    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    shell(
        "pindel -T {snakemake.threads} {snakemake.params.extra} -i {snakemake.input.config} "
        "-f {snakemake.input.ref} -o {snakemake.params.prefix} {log}"
    )


.. |nl| raw:: html

   <br>