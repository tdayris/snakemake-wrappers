.. _`bio/iRODS/iget`:

IRODS COPY
==========

This wrapper performs iRODS copy from a file url

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_iRODS_iget:
        output:
            "my_file.txt"
        params:
            input = "/irods/path/archive/my_file.txt"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/iRODS/iget"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.


Input/Output
------------
**Input:**

* None

**Output:**

* The expected downloaded file




Notes
-----

Parameters:

* remote_extra (dict): Extra parameters for remote
* input (string): A file to get from iRODS



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3.8
    # conding: utf-8

    """
    A script that handles iRODS copy.

    WARNING: Input file has to be defined in params, as it does not exists outside
    iRODS environment. Therefore, snakemake would raise a FileNotFoundError
    (false positive in best cases).

    snakemake.RemoteProvider.iRODS is not used since authentication cannot be
    securely transmitted within the wrapper.
    """

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell

    # Prepare logging
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    extra = snakemake.params.get("extra", "-VK")

    if not isinstance(snakemake.params['input'], str):
        raise TypeError(
            "A single file is expected in this wrapper. Multiple copies should be "
            "performed in multiple call of this wrapper."
        )

    shell(
        " iget "  # Copy command from iRODS
        " {extra} "  # Extra parameters
        " -N {snakemake.threads} "  # Maximum number of threads
        " {snakemake.params['input']} "  # Input collection
        " {snakemake.output[0]} "  # Output path
        " {log} "  # Logging behavior
    )


.. |nl| raw:: html

   <br>