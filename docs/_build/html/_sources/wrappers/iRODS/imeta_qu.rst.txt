.. _`bio/iRODS/imeta_qu`:

IMETA_QU
========

Perform imeta requests

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_iRODS_imeta:
        output:
            "imeta.txt"
        params:
            extra = "-d",
            kwords = {"projectName": "MetaPRISM", "protocol": "mRNA%"}
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/iRODS/imeta_qu"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``conda-forge:bash=5.0.011``
* ``conda-forge:python-irodsclient=0.8.2``

Input/Output
------------
**Input:**

* None

**Output:**

* A text file containing imeta result




Notes
-----

Parameters:

* kwords (dict): A dictionary containing {key: value}. Replace "*" by "%" for glob and pattern research
* extra (str): extra parameters for `imeta qu`



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/python3.7
    # -*- coding: utf-8 -*-

    """Snakemake wrapper for iRODS imeta qu"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2020, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"


    from snakemake.shell import shell

    # Prepare logging
    log = snakemake.log_fmt_shell(stdout=False, stderr=True)
    extra = snakemake.params.get("extra", "")

    kwords_list = [
        f'"{k}" {"like" if "%" in v else "="} "{v}"'
        for k, v in snakemake.params["kwords"].items()
    ]
    kwords_command = " and ".join(kwords_list)

    shell(
        "imeta qu"  # iRODS command
        " {extra} "  # Extra parameters
        " {kwords_command} "  # Kwords list
        " > {snakemake.output[0]} "  # Path to output file
        " {log} "  # Logging behavior
    )


.. |nl| raw:: html

   <br>