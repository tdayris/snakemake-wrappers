.. _`bio/wisecondorx/convert`:

WISECONDORX_CONVERT
===================

Convert aligned reads (bam/cram) to .npz

**URL**: https://github.com/CenterForMedicalGeneticsGhent/WisecondorX#stage-1-convert-aligned-reads-bamcram-to-npz

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule wisecondorx_convert:
        input:
            aln = "bowtie2/map/{sample}.bam",
            ref = config["ref"]
        output:
            "wisecondorx/convert/{sample}.npz"
        message: "Converting reads {wildcards.sample} to NPZ"
        threads: 1
        resources:
            mem_mb=lambda wildcards, attempt: attempt * 1024,
            time_min=lambda wildcards, attempt: attempt * 15,
            tmpdir="tmp"
        params:
            extra=config.get("convert_extra", "")
        log:
            "logs/wisecondorx/convert/{sample}.log"
        wrapper:
            "bio/wisecondorx/convert"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``wisecondorx==1.2.4``

Input/Output
------------
**Input:**

* ``aln``: Path to bam/cram file
* ``ref``: Path to reference fasta file

**Output:**

* Path to npz file



Params
------

* ``extra``: Optional arguments besides `--reference`





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-

    """Snakemake wrapper for WisecondorX convert"""

    from snakemake.shell import shell

    log = snakemake.log_fmt_shell()
    extra = snakemake.params.get("extra", "")

    shell(
        "WisecondorX convert {snakemake.input.aln} "
        "--reference {snakemake.input.ref} "
        "{snakemake.output[0]} {extra} {log}"
    )


.. |nl| raw:: html

   <br>