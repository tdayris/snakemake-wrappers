.. _`bio/sambamba/sort`:

SAMBAMBA SORT
=============

Sort bam file with sambamba

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule sambamba_sort:
        input:
            "mapped/{sample}.bam"
        output:
            "mapped/{sample}.sorted.bam"
        params:
            ""  # optional parameters
        log:
            "logs/sambamba-sort/{sample}.log"
        threads: 8
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/sambamba/sort"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``sambamba==0.8.0``

Input/Output
------------
**Input:**

* bam file

**Output:**

* sorted bam file





Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2016, Johannes Köster"
    __email__ = "koester@jimmy.harvard.edu"
    __license__ = "MIT"


    import os
    import tempfile

    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    mapin = snakemake.input["mapping"]
    mapout = snakemake.output["mapping"]
    tempdir = tempfile.mkdtemp()
    if "tmpdir" in snakemake.resources.keys():
        tempdir = snakemake.resources["tmpdir"]

    memory = "--memory-limit "
    if "mem_mb" in snakemake.resources.keys():
        memory += str(int(snakemake.resources["mem_mb"] / snakemake.threads)) + "MB"
    else:
        memory += "2GB"


    shell(
        "sambamba sort "
        "{snakemake.params} "
        "{memory} "
        "--tmpdir {tempdir} "
        "--nthreads {snakemake.threads} "
        "--out {mapout} "
        "{mapin} "
        "{log}"
    )


.. |nl| raw:: html

   <br>