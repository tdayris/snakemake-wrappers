.. _`bio/sigprofiler/geninstall`:

SIGPROFILER GENINSTALL
======================

Download and install references for SigProfiler

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule geninstall:
        output:
            ref="GRCh38.tar.bz2"
        params:
            ref="GRCh38"
        threads: 1
        resources:
            mem_mb=lambda wildcards, attempt: attempt * 1024,
            time_min=lambda wildcards, attempt: attempt * 15,
            tmpdir="tmp"
        log:
            "logs/sigprofiler/geninstall.log"
        wrapper:
            "bio/sigprofiler/geninstall"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``cudatoolkit==11.5.0``
* ``pytorch==1.10.0``
* ``pip==21.3.1``
* ``{'pip':['SigProfilerMatrixGenerator','SigProfilerSimulator','SigProfilerExtractor','SigProfilerPlotting']}``



Params
------

* ``ref``: Optional reference name if no reference is provided in input.




Notes
-----

notes



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-

    """This wrapper runs SigProfiler over your VCF files"""


    import logging
    import os

    from os import path
    from tempfile import TemporaryDirectory

    from SigProfilerMatrixGenerator import install as genInstall

    logging.basicConfig(
        #filename=snakemake.log[0],
        filemode="w",
        level=logging.DEBUG
    )

    logging.info("Installing reference")
    refname = (
        path.basename(snakemake.output["ref"][0][:-len(".gz")])
        if isinstance(snakemake.output["ref"], list)
        else path.basename(snakemake.output["ref"][:-len(".gz")])
    )

    if "ref" in snakemake.params.keys():
        genInstall.install(
            snakemake.params["ref"],
            rsync=snakemake.params.get("use_rsync", True),
            bash=not snakemake.params.get("use_rsync", True)
        )
    elif "ref" in snakemake.input.keys():
        genInstall.install(
            refname,
            offline_files_path=snakemake.input["ref"]
        )
    else:
        raise ValueError("Could not find any genome reference")


.. |nl| raw:: html

   <br>