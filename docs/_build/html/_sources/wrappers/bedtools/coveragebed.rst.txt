.. _`bio/bedtools/coveragebed`:

COVERAGEBED
===========

Returns the depth and breadth of coverage of features from B on the intervals in A.

**URL**: https://bedtools.readthedocs.io/en/latest/content/tools/coverage.html

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule coverageBed:
        input:
            a="bed/{sample}.bed",
            b="mapped/{sample}.bam"
        output:
            "stats/{sample}.cov"
        log:
            "logs/coveragebed/{sample}.log"
        params:
            extra=""  # optional parameters
        threads: 8
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/bedtools/coveragebed"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bedtools==2.29.0``

Input/Output
------------
**Input:**

* ``a``: BAM/BED/GFF/VCF file
* ``b``: One or more BAM/BED/GFF/VCF file(s)

**Output:**

* Output coverage file, this must be the first element of the output file list.



Params
------

* ``extra``: Optional parameters, see `coverageBed official documentation <https://bedtools.readthedocs.io/en/latest/content/tools/coverage.html#usage-and-option-summary>`_ for more information.





Authors
-------

* Patrik Smeds


Code
----

.. code-block:: python

    __author__ = "Patrik Smeds"
    __copyright__ = "Copyright 2019, Patrik Smeds"
    __email__ = "patrik.smeds@gmail.com"
    __license__ = "MIT"


    from snakemake.shell import shell

    shell.executable("bash")

    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    extra_params = snakemake.params.get("extra", "")

    input_a = snakemake.input.a
    input_b = snakemake.input.b

    output_file = snakemake.output[0]

    if not isinstance(output_file, str) and len(snakemake.output) != 1:
        raise ValueError("Output should be one file: " + str(output_file) + "!")

    shell(
        "coverageBed"
        " -a {input_a}"
        " -b {input_b}"
        " {extra_params}"
        " > {output_file}"
        " {log}"
    )


.. |nl| raw:: html

   <br>