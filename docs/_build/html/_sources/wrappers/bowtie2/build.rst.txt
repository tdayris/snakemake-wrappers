.. _`bio/bowtie2/build`:

BOWTIE2_BUILD
=============

Map reads with bowtie2.

**URL**: http://bowtie-bio.sourceforge.net/bowtie2/index.shtml

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule bowtie2_build:
        input:
            reference="genome.fasta"
        output:
            multiext(
                "genome",
                ".1.bt2", ".2.bt2", ".3.bt2", ".4.bt2", ".rev.1.bt2", ".rev.2.bt2",
            ),
        log:
            "logs/bowtie2_build/build.log"
        params:
            extra=""  # optional parameters
        threads: 8
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/bowtie2/build"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bowtie2==2.4.4``
* ``samtools==1.10``

Input/Output
------------
**Input:**

* ``reference``: fasta-formatted sequence file

**Output:**

* Index files. The ".1.bt2" index must be the first of the output file list



Params
------

* ``extra``: Optional parameters, more information on the `bowtie2-build documentation <http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#the-bowtie2-build-indexer>`_





Authors
-------

* Daniel Standage


Code
----

.. code-block:: python

    __author__ = "Daniel Standage"
    __copyright__ = "Copyright 2020, Daniel Standage"
    __email__ = "daniel.standage@nbacc.dhs.gov"
    __license__ = "MIT"


    from snakemake.shell import shell

    extra = snakemake.params.get("extra", "")
    log = snakemake.log_fmt_shell(stdout=True, stderr=True)
    indexbase = snakemake.output[0].replace(".1.bt2", "")
    shell(
        "bowtie2-build --threads {snakemake.threads} {snakemake.params.extra} "
        "{snakemake.input.reference} {indexbase}"
    )


.. |nl| raw:: html

   <br>