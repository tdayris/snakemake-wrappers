.. _`bio/gatk3/indelrealigner`:

GATK3 INDELREALIGNER
====================

Run gatk3 IndelRealigner


**URL**: https://github.com/broadinstitute/gatk-docs/blob/master/gatk3-tutorials/(howto)_Perform_local_realignment_around_indels.md

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule indelrealigner:
        input:
            bam="mapped/{sample}.bam",
            bai="mapped/{sample}.bai",
            ref="genome.fasta",
            known="dbsnp.vcf.gz",
            known_idx="dbsnp.vcf.gz.tbi",
            target_intervals="{sample}.intervals"
        output:
            bam="realigned/{sample}.bam",
            bai="realigned/{sample}.bai",
            java_temp=temp(directory("/tmp/gatk3_indelrealigner/{sample}")),
        log:
            "logs/gatk3/indelrealigner/{sample}.log"
        params:
            extra=""  # optional
        threads: 16
        resources:
            mem_mb = 1024
        wrapper:
            "bio/gatk/indelrealigner"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk==3.8``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* ``bam``: Path to bam file
* ``ref``: Path to reference genome
* ``target_intervals``: target intervals to realign
* ``bed``: Path to Bed intervals (optional)
* ``known``: vcf files known variation (optional)

**Output:**

* ``bam``: indel realigned bam file
* ``bai``: indel realigned bai file (optional)



Params
------

* ``java_opts``: The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-XX:ParallelGCThreads=10" (memory is automatically inferred from `resources` and temp dir from `output.java_temp`.

* ``extra``: The `extra` param allows for additional program arguments.




Notes
-----

* Gatk3.jar is not included in the bioconda package, i.e it need to be added to the conda environment manually.



Authors
-------

* Patrik Smeds
* Filipe G. Vieira


Code
----

.. code-block:: python

    __author__ = "Patrik Smeds"
    __copyright__ = "Copyright 2019, Patrik Smeds"
    __email__ = "patrik.smeds@gmail.com.com"
    __license__ = "MIT"

    import os

    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts


    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)


    bed = snakemake.input.get("bed", "")
    if bed:
        bed = "-L " + bed


    known = snakemake.input.get("known", "")
    if known:
        if isinstance(known, str):
            known = "-known {}".format(known)
        else:
            known = list(map("-known {}".format, known))


    output_bai = snakemake.output.get("bai", None)
    if output_bai is None:
        extra += " --disable_bam_indexing"


    log = snakemake.log_fmt_shell(stdout=True, stderr=True)


    shell(
        "gatk3 {java_opts} -T IndelRealigner"
        " {extra}"
        " -I {snakemake.input.bam}"
        " -R {snakemake.input.ref}"
        " {known}"
        " {bed}"
        " --targetIntervals {snakemake.input.target_intervals}"
        " -o {snakemake.output.bam}"
        " {log}"
    )


.. |nl| raw:: html

   <br>