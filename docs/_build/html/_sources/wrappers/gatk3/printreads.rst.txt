.. _`bio/gatk3/printreads`:

GATK3 PRINTREADS
================

Run gatk3 PrintReads


**URL**: https://gatk.broadinstitute.org/hc/en-us/articles/360036897512-PrintReads

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule printreads:
        input:
            bam="mapped/{sample}.bam",
            ref="genome.fasta",
            recal_data="{sample}.recal_data_table"
        output:
            "alignment/{sample}.bqsr.bam"
        log:
            "logs/gatk/bqsr/{sample}..log"
        params:
            extra=""  # optional
        resources:
            mem_mb = 1024
        threads: 16
        wrapper:
            "bio/gatk3/printreads"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``gatk==3.8``
* ``snakemake-wrapper-utils==0.1.3``

Input/Output
------------
**Input:**

* ``bam``: Path to bam file
* ``recal_data``: Path to BQSR recalibration table
* ``ref``: Path to reference genome

**Output:**

* Path to bam file, this must be the only output file.



Params
------

* ``extra``: The `extra` param allows for additional program arguments.

* ``java_opts``: The `java_opts` param allows for additional arguments to be passed to the java compiler, e.g. "-Xmx4G" for one, and "-Xmx4G -XX:ParallelGCThreads=10" for two options.




Notes
-----

* Gatk3.jar is not included in the bioconda package, i.e it need to be added to the conda environment manually.



Authors
-------

* Patrik Smeds


Code
----

.. code-block:: python

    __author__ = "Patrik Smeds"
    __copyright__ = "Copyright 2019, Patrik Smeds"
    __email__ = "patrik.smeds@gmail.com.com"
    __license__ = "MIT"

    import os

    from snakemake.shell import shell
    from snakemake_wrapper_utils.java import get_java_opts

    extra = snakemake.params.get("extra", "")
    java_opts = get_java_opts(snakemake)

    input_bam = snakemake.input.bam
    input_recal_data = snakemake.input.recal_data
    input_ref = snakemake.input.ref

    log = snakemake.log_fmt_shell(stdout=True, stderr=True)

    shell(
        "gatk3 {java_opts} -T PrintReads"
        " {extra}"
        " -I {input_bam}"
        " -R {input_ref}"
        " -BQSR {input_recal_data}"
        " -o {snakemake.output}"
        " {log}"
    )


.. |nl| raw:: html

   <br>