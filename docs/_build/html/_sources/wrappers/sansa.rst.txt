.. _`bio/sansa`:

SANSA
=====

Structural variant annotation with Sansa, from the Delly suite

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_sansa:
        input:
            vcf = "in.vcf",
            # vcf_tbi = "test.vcf.gz.tbi",
            db = "annotation.vcf",
            # db_tbi = "annot.vcf.gz.tbi",
            gtf = "annot.gtf"
        output:
            vcf = "out.vcf",
            contained = "gene.list.txt"
        threads: 1
        log:
            "logs/sansa.log"
        params:
            extra = ""
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/sansa"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``sansa==0.0.8``

Input/Output
------------
**Input:**

* ``vcf``: Path to a VCF that is to be annotated (CNV/SNP/INDEL)
* ``gtf``: Path to a GTF/GFF to annotate with (gzipped GFT/GFF3)
* ``db``: Path to a VCF/BCF to annotate with (gzipped vcf, with tbi alongside)

**Output:**

* ``vcf``: Path to the annotated VCF
* ``contained``: Optional path to list of overlapping genes (potentially long for CNV)



Params
------

* ``extra``: Extra parameters, like `--distance 0`





Authors
-------

* Thibault Dayris


Code
----

.. code-block:: python

    #!/usr/bin/env python3
    # -*- coding: utf-8 -*-

    """Sansa wrapper for Snakemake"""

    __author__ = "Thibault Dayris"
    __copyright__ = "Copyright 2021, Thibault Dayris"
    __email__ = "thibault.dayris@gustaveroussy.fr"
    __license__ = "MIT"

    from snakemake.shell import shell

    log = snakemake.log_fmt_shell(stdout=False, stderr=True)

    gtf = ""
    if "gtf" in snakemake.input.keys():
        gtf = "--gtf {}".format(snakemake.input["gtf"])

    db = ""
    if "db" in snakemake.input.keys():
        db = "--db {}".format(snakemake.input["db"])

    contained = ""
    if "contained" in snakemake.output.keys():
        contained = "--contained {}".format(snakemake.output["contained"])

    #anno = "--anno {}".format(snakemake.output["vcf"])
    extra = snakemake.params.get("extra", "")

    shell(
        "sansa annotate "
        "{gtf} "
        "{db} "
        #"{anno} "
        "{contained} "
        "{extra} "
        "{snakemake.input.vcf} "
        " > {snakemake.output.vcf} "
        "{log}"
    )


.. |nl| raw:: html

   <br>