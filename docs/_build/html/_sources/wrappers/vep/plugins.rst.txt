.. _`bio/vep/plugins`:

VEP DOWNLOAD PLUGINS
====================

Download VEP plugins.

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule download_vep_plugins:
        output:
            directory("resources/vep/plugins")
        params:
            release=100
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/vep/plugins"


Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``python=3``





Authors
-------

* Johannes Köster


Code
----

.. code-block:: python

    __author__ = "Johannes Köster"
    __copyright__ = "Copyright 2020, Johannes Köster"
    __email__ = "johannes.koester@uni-due.de"
    __license__ = "MIT"

    import sys
    from pathlib import Path
    from urllib.request import urlretrieve
    from zipfile import ZipFile
    from tempfile import NamedTemporaryFile

    if snakemake.log:
        sys.stderr = open(snakemake.log[0], "w")

    outdir = Path(snakemake.output[0])
    outdir.mkdir()

    with NamedTemporaryFile() as tmp:
        urlretrieve(
            "https://github.com/Ensembl/VEP_plugins/archive/release/{release}.zip".format(
                release=snakemake.params.release
            ),
            tmp.name,
        )

        with ZipFile(tmp.name) as f:
            for member in f.infolist():
                memberpath = Path(member.filename)
                if len(memberpath.parts) == 1:
                    # skip root dir
                    continue
                targetpath = outdir / memberpath.relative_to(memberpath.parts[0])
                if member.is_dir():
                    targetpath.mkdir()
                else:
                    with open(targetpath, "wb") as out:
                        out.write(f.read(member.filename))


.. |nl| raw:: html

   <br>