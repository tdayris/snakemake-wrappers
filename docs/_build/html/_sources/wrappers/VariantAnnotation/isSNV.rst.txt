.. _`bio/VariantAnnotation/isSNV`:

SOMATIC_SIGNATURES
==================

Filter a VRange file and keep only SNVs

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule test_VariantAnnotation_isSNV:
        input:
            calls = "calls.rds"
        output:
            rds = "snv.rds"
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/VariantAnnotation/isSNV"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``bioconda:bioconductor-variantannotation=1.34.0``

Input/Output
------------
**Input:**

* VCF files

**Output:**

* PNG image




Notes
-----

This wrapper exists because SomaticSignatures only takes SNP into account



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/usr/bin/R

    # Filter VCF based on the SNP status
    library(package = "VariantAnnotation", quietly = TRUE);
    library(package = "Biostrings", quietly = TRUE);

    # Load dataset
    vcf <- base::readRDS(
      base::as.character(x = snakemake@input[["calls"]])
    );

    # Filter dataset on SNVs
    keep_snv <- VariantAnnotation::isSNV(vcf, singleAltOnly=TRUE);
    keep_ref <- VariantAnnotation::ref(vcf) %in% Biostrings::DNA_BASES;
    keep_alt <- VariantAnnotation::alt(vcf) %in% Biostrings::DNA_BASES;
    vcf <- vcf[keep_alt & keep_ref & keep_snv, ];

    # Save results
    base::saveRDS(
      object = vcf,
      file = base::as.character(x = snakemake@output[["rds"]])
    );


.. |nl| raw:: html

   <br>