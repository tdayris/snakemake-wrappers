.. _`bio/eacon/segment`:

EACON_SEGMENT
=============

Segment profile with EaCoN

**URL**: 

Example
-------

This wrapper can be used in the following way:

.. code-block:: python

    rule EaCoN_segment:
        input:
            rds = "{sample}/{sample}_OncoScan_CNV_hg19_processed.RDS"
        output:
            files = multiext(
                "{sample}/ASCAT/L2R/{sample}",
                ".Cut.cbs",
                ".NoCut.cbs",
                ".Rorschach.png",
                ".SegmentedBAF.txt"
            ),
            rds = "{sample}/ASCAT/L2R/{sample}.SEG.ASCAT.RDS",
            png = "{sample}/ASCAT/L2R/{sample}.SEG.ASCAT.png"
        threads: 1
        resources:
            time_min=lambda wildcards, attempt: attempt * 35,
            mem_mb=lambda wildcards, attempt: attempt * 3 * 1024
        log:
            "logs/EaCoN/{sample}/segment.log"
        params:
            extra = ""
        wrapper:
            "0.50.4-2418-g8fefa1e53/bio/eacon/segment"

Note that input, output and log file paths can be chosen freely.

When running with

.. code-block:: bash

    snakemake --use-conda

the software dependencies will be automatically deployed into an isolated environment before execution.

Software dependencies
---------------------

* ``conda-forge::r-base==4.1.0``
* ``conda-forge::r-devtools==2.4.2``
* ``conda-forge::r-dbi==1.1.1``
* ``conda-forge::r-rsqlite==2.2.5``
* ``conda-forge::r-rmarkdown==2.8``
* ``bioconda::r-eacon==0.3.6``
* ``bioconda::bioconductor-bsgenome==1.60.0``
* ``bioconda::bioconductor-bsgenome.hsapiens.ucsc.hg19==1.4.3``
* ``bioconda::bioconductor-bsgenome.hsapiens.ucsc.hg38==1.4.3``
* ``bioconda::bioconductor-bsgenome.hsapiens.1000genomes.hs37d5==0.99.1``
* ``bioconda::bioconductor-affxparser==1.64.0``
* ``bioconda::bioconductor-biostrings==2.60.0``
* ``bioconda::bioconductor-aroma.light==3.22.0``
* ``bioconda::bioconductor-copynumber==1.32.0``
* ``bioconda::bioconductor-genomicranges==1.44.0``
* ``bioconda::bioconductor-rhdf5==2.36.0``
* ``bioconda::bioconductor-limma==3.48.0``
* ``bioconda::r-sequenza==3.0.0``
* ``bioconda::r-facets==0.6.1``
* ``bioconda::ascat==2.5.2``
* ``conda-forge::r-foreach==1.5.1``
* ``conda-forge::r-dplyr==1.0.6``

Input/Output
------------
**Input:**

* RDS processed file

**Output:**

* RDS segmented file




Notes
-----

Use extra parameters to pass options to segment.ff



Authors
-------

* Thibault Dayris


Code
----

.. code-block:: R

    #!/bin/R

    # This is the snakemake wrapper for EaCoN segmentation

    # __author__ = "Thibault Dayris"
    # __copyright__ = "Copyright 2020, Thibault Dayris"
    # __email__ = "thibault.dayris@gustaveroussy.fr"
    # __license__ = "MIT"

    # Sink the stderr and stdout to the snakemake log file
    # https://stackoverflow.com/a/48173272
    log.file<-file(snakemake@log[[1]],open="wt");
    base::sink(log.file);
    base::sink(log.file,type="message");

    base::library(package = "EaCoN", quietly = TRUE);

    input_rds <- base::as.character(
      x = snakemake@input[["rds"]]
    );

    extra <- "force=TRUE";
    if ("extra" %in% base::names(snakemake@params)) {
      extra <- base::as.character(x = snakemake@params[["extra"]]);
    }

    command <- base::paste0(
      "EaCoN::Segment.ff(RDS.file = input_rds, ",
      extra,
      ")"
    );
    base::message(command);

    base::eval(
      base::parse(
        text=command
      )
    );

    # Proper syntax to close the connection for the log file
    # but could be optional for Snakemake wrapper
    base::sink(type="message");
    base::sink();


.. |nl| raw:: html

   <br>