.. _`celltype_deconvolution_rnaseq`:

CELLTYPE_DECONVOLUTION_RNASEQ
=============================

Perform trimming and quantification on RNASeq, then cell type opulation deconvolution

Usage
-----

In order to run the pipeline, use the following commands

.. code-block:: bash 

  # Go to your working directory

  cd /path/to/my/working/directory

  # Build a design file (see below)

  # Copy/paste the following line for **HG19**

  bash /mnt/beegfs/pipelines/snakemake-wrappers/bigr_pipelines/celltype_deconvolution_rnaseq/run.sh hg19

  # Copy/paste the following line for **HG38**

  bash /mnt/beegfs/pipelines/snakemake-wrappers/bigr_pipelines/celltype_deconvolution_rnaseq/run.sh hg38


Input/Output
------------


**Input:**

 
  
* Fastq files
  
 
  
* Fasta-formatted Genome sequence
  
 
  
* Fasta-formatted transcriptome sequence
  
 
  
* GTF formatted genome annotation
  
 


**Output:**

 
  
* Both PNG and TSV formatted deconvolution results
  
 
  
* Salmon quantification
  
 
  
* Quality controls
  
 
  
* Trimmed fastq files
  
 







Notes
-----

Prerequisites:

* A TSV formatted design file, *named 'design.tsv'* with the following columns:

.. list-table:: Desgin file format
  :widths: 33 33 33
  :header-rows: 1

  * - Sample_id
    - Upstream_fastq
    - Downstream_fastq
  * - Name of the Sample1
    - Path to upstream fastq file
    - Path to downstream fastq file
  * - Name of the Sample2
    - Path to upstream fastq file
    - Path to downstream fastq file
  * - ...
    - ...
    - ...





Snakefile
---------

The pipeline contains the following steps:

.. code-block:: python

    from snakemake.utils import min_version
    from pathlib import Path
    from yaml import dump
    min_version("7.0")

    import sys

    worflow_source_dir = Path(snakemake.workflow.srcdir("."))
    common = str(worflow_source_dir / ".." / "common" / "python")
    sys.path.append(common)

    from file_manager import *
    from files_linker import *
    from write_yaml import *
    from messages import message

    logging.basicConfig(
        filename="snakemake.celltype_deconvolution_rnaseq.log",
        filemode="w",
        level=logging.DEBUG
    )

    default_config = read_yaml(worflow_source_dir / "config.hg38.yaml")
    configfile: get_config(default_config)
    design = get_design(os.getcwd(), search_fastq_pairs)
    #print(design)

    if "Sample_id" in design.columns.tolist():
        design.set_index("Sample_id", inplace=True)

    fastq_links = link_fq(
        design.index,
        design.Upstream_file,
        design.Downstream_file
    )

    localrules: get_cibersort



    ##################
    ### Flag rules ###
    ##################

    onsuccess:
        shell("touch DONE && rm --force --verbose ON_GOING ERROR")

    onerror:
        shell("touch ERROR && rm --force --verbose ON_GOING DONE")

    onstart:
        shell("touch ON_GOING && rm --force --verbose ERROR DONE")


    rule target_celltype_deconvolution_rnaseq:
        input:
            graphs = expand(
                "{tool}/celltypes.{plot}.png",
                tool=["cibersort_abs", "cibersort", "quantiseq", "xcell", "epic"],
                plot=["hist", "dotplot"]
            ),
            text = expand(
                "{tool}/celltypes.{ext}",
                tool=["cibersort_abs", "cibersort", "quantiseq", "xcell", "epic"],
                ext=["tsv", "RDS"]
            ),
            plotdirs = expand(
                "{tool}/celltypes.dotplots",
                tool=["cibersort_abs", "cibersort", "quantiseq", "xcell", "epic"]
            )

    ################################
    ### Deconvolution: CIBERSORT ###
    ################################


    include: "rules/007.cibersort.smk"


    #############################
    ### Deconvolution: OTHERS ###
    #############################


    include: "rules/006.mcpcounter.smk"
    include: "rules/005.epic.smk"
    include: "rules/004.quantiseq.smk"
    include: "rules/003.xcell.smk"


    ######################
    ### Quantification ###
    ######################


    include: "rules/002.salmon_post_process.smk"


    # #############################
    # ### Salmon quantification ###
    # #############################


    include: "rules/001.salmon_quant_pipeline.smk"




Authors
-------


* Thibault Dayris
